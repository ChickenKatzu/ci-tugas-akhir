MVC

model  -> db
view   -> frontend
controller -> back-end


OOP


Class Diagram
Class  adalah Controller || SESUAIKAN DOKUMEN ||

1. UserController
	home()
	register()
	login()
	user_management()
	insert_user()
	error()

2. BookingController
	info kamar()
	booking ()

3. Kamar Controller
	dashboard_user()
	dashboard_admin()
	dashboard_owner()


4. Notification
	transaksi()

NB:
Info kamar pindah kamarcontroller


ERD

1. User
2. Booking "pemesanan"
3. Kos "Kamar"
4. Notification



url : https://aloi.com/user/kamar = page

stuructur
url :https://aloi.com/segment1/segment2/segmentn





base_url = https://aloi.com/
Controller = segment1 
function = segment2




$route['kamar'] = 'user/kamar'


redirect = segment1/segment2/segment3--



redirect = controller/function



//
Controllers
-- Front/
---- HomeController@index
---- RoomsController@index
---- RoomsController@details
---- RoomsController@booking
---- AuthController@login
---- AuthController@register
---- AuthController@forgot_password
-- User/
---- DashboardController@index
---- BookingsController@index
---- BookingsController@show
---- ProfileController@index
---- ProfileController@update
---- ProfileController@password
---- ProfileController@password_update
-- Admin/
---- DashboardController@index
------ RoomsController@index
------ RoomsController@show
------ RoomsController@create
------ RoomsController@store
------ RoomsController@edit
------ RoomsController@update
------ RoomsController@destroy
------ BookingsController@index
------ BookingsController@review
------ BookingsController@update
------ UsersController@index
------ UsersController@show
------ UsersController@create
------ UsersController@store
------ UsersController@edit
------ UsersController@update
------ UsersController@destroy


Tabel
users 
-- id
-- email
-- password
-- fullname
-- address
-- dob
-- phone
-- role
-- created_at
-- updated_at

rooms
-- id
-- name
-- price
-- available
-- total
-- desc
-- created_at
-- updated_at

bookings
-- id
-- user_id
-- room_id
-- start_date
-- end_date
-- approval_st ENUM waiting,approved,rejected
-- created_at
-- updated_at

checkout process
$room_id = $this->input->post('room_id');
// cek ke database available room by room_id
$room = $this->db->select('*')->from('rooms')->where('id',$room_id)->get()->row();
if($room->available >= 1){
	// process
	$params = array(
		'user_id' => $this->input->post('user_id'),
		'room_id' => $this->input->post('room_id'),
		'start_date' => $this->input->post('start_date'),
		'end_date' => $this->input->post('end_date'),
		'approval_st' => 'waiting',
		'created_at' => date('Y-m-d H:i:s')
	);
	$this->db->insert('bookings',$params);

	// kurangi available di rooms
	$params2 = array(
		'available' => $room->available - 1,
		'updated_at' => date('Y-m-d H:i:s')
	);
	
	if($this->db->update('rooms',$params2,array('room_id',$room_id))){
		set_flashdata('success','booking berhasil');
		redirect ke halaman booking user
	}
}else{
	return redirect ke halaman sebelumnya
	dan kasih flash
}

select dari booking order terbaru yang statusnya waiting


// logic 